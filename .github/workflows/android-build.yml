name: Android - Build

on:
  workflow_dispatch:
    inputs:
      forcedVersion:
        description: Force Version Number String
      forcedBuildNumber:
        description: Force Build Number
      forcedEnvironment:
        description: Force environment used for .env file content

# prevents multiple build workflows from running
# (in-progress and queued will be cancelled in favor of pending)
concurrency:
  group: build-android-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build and upload to Google Play
    environment: production
    runs-on: ubuntu-20.04

    steps:
      # checkout the repo
      # fetch-depth: 0 is required to fetch all tags to generate changelog
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      ######################
      # Set .env file vars (development/production)
      # ENV_VARS content has to be encoded as base64 in order to preserve newlines
      # use "cat .env | base64 | pbcopy" to get pasteable content for GitHub secrets
      ######################
      - name: Set env vars (production)
        if: ${{ github.event.inputs.forcedEnvironment == 'production' || (github.event.inputs.forcedEnvironment == null && github.ref == 'master') }}
        env:
          DOTENV_CONTENTS_BASE64: ${{ secrets.PRODUCTION_DOTENV_CONTENTS_BASE64 }}
        run: |
          echo "using production environment"
          echo $DOTENV_CONTENTS_BASE64 | base64 -d > .env
          echo "CI_MATCHED_ENV=production" >> $GITHUB_ENV

      - name: Set env vars (development)
        env:
          DOTENV_CONTENTS_BASE64: ${{ secrets.DEVELOP_DOTENV_CONTENTS_BASE64 }}
        run: |
          if [[ ! -f ".env" ]]; then
            echo "fallback to development environment"
            echo $DOTENV_CONTENTS_BASE64 | base64 -d > .env
            echo "CI_MATCHED_ENV=develop" >> $GITHUB_ENV
          fi
      ######################
      # END Set .env file vars (development/production)
      ######################

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: cache yarn
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ secrets.CACHE_KEY_PREFIX }}-${{ hashFiles('**/yarn.lock') }}

      - name: update hash
        run: ./scripts/add-commit-hash-to-env.sh

      - name: yarn install
        run: yarn install

      - name: add json key
        env:
          JSON_KEY_FILE_CONTENTS: ${{ secrets.ANDROID_JSON_KEY_FILE_CONTENTS }}
        run: |
          echo $JSON_KEY_FILE_CONTENTS > android/google-play-api-key.json

      - name: Build
        timeout-minutes: 60
        env:
          CI_MATCHED_ENV: ${{ env.CI_MATCHED_ENV }}
          CONNECT_API_KEY_CONTENT: ${{ secrets.CONNECT_API_KEY_CONTENT }}
          FASTLANE_PASSWORD: ${{ secrets.FASTLANE_PASSWORD }}
          FORCED_VERSION_NUMBER_STRING: ${{ github.event.inputs.forcedVersion }}
          FORCED_BUILD_NUMBER: ${{ github.event.inputs.forcedBuildNumber }}
          GIT_HEAD_REF: ${{ github.head_ref }}
          FASTLANE_SKIP_UPDATE_CHECK: 1
        run: |
          cd android
          fastlane android build --verbose
