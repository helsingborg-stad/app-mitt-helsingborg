name: iOS - Build

on:
  push:
    branches:
      # any commit to a release branch will trigger a new build
      - release/**

  workflow_dispatch:
    inputs:
      forcedVersion:
        description: Force Version Number String
      forcedBuildNumber:
        description: Force Build Number

# prevents multiple build workflows from running
# (in-progress and queued will be cancelled in favor of pending)
concurrency:
  group: build-ios-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build and upload to TestFlight
    environment: production
    runs-on: macos-12
    if: ${{ github.event_name != 'pull_request' || github.event.pull_request.merged == true }}

    env:
      CERT_KEYCHAIN_PASSWORD: ${{ secrets.CERT_KEYCHAIN_PASSWORD }}
      NODE_ENV: production

    steps:
      # checkout the repo
      # fetch-depth: 0 is required to fetch all tags to generate changelog
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      ######################
      # set .env file
      # content has to be encoded as base64 in order to preserve newlines
      # use "cat .env | base64 | pbcopy" to get pasteable content for GitHub secrets
      ######################

      - name: Set env vars
        env:
          DOTENV_CONTENTS_BASE64: ${{ secrets.DOTENV_CONTENTS_BASE64 }}
        run: |
          echo $DOTENV_CONTENTS_BASE64 | base64 -d > .env

      ######################
      # END set .env file
      ######################

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT

      - name: cache yarn
        uses: actions/cache@v3
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ secrets.CACHE_KEY_PREFIX }}-${{ hashFiles('**/yarn.lock') }}

      - name: update hash
        run: ./scripts/add-commit-hash-to-env.sh

      - name: cache cocoapods
        uses: actions/cache@v3
        with:
          path: ios/Pods
          key: ${{ runner.os }}-pods-${{ secrets.CACHE_KEY_PREFIX }}-${{ hashFiles('**/Podfile.lock', '**/yarn.lock') }}

      - name: cache cocoapods DD
        uses: actions/cache@v3
        with:
          path: ios/.local_derived_data
          key: ${{ runner.os }}-pods-derived-data-${{ secrets.CACHE_KEY_PREFIX }}-${{ hashFiles('**/Podfile.lock', '**/yarn.lock') }}-${{ hashFiles('.env') }}

      - name: yarn install
        run: yarn install

      - name: Install cert and profile
        env:
          BUILD_CERTIFICATE_BASE64: ${{ secrets.BUILD_CERTIFICATE_BASE64_v20220725 }}
          P12_PASSWORD: ${{ secrets.P12_PASSWORD_v20220725 }}
        run: |
          # create variables
          CERT_PATH=build_certificate.p12
          CERT_KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db

          # import certificate and provisioning profile from secrets
          echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode --output $CERT_PATH

          # create temporary keychain
          security create-keychain -p $CERT_KEYCHAIN_PASSWORD $CERT_KEYCHAIN_PATH
          security set-keychain-settings -lut 3600 $CERT_KEYCHAIN_PATH
          security unlock-keychain -p $CERT_KEYCHAIN_PASSWORD $CERT_KEYCHAIN_PATH

          # import certificate to keychain
          security import $CERT_PATH -P $P12_PASSWORD -A -t cert -f pkcs12 -k $CERT_KEYCHAIN_PATH
          security list-keychain -d user -s $CERT_KEYCHAIN_PATH

      - name: Setup Sentry
        env:
          SENTRY_PROPERTIES: ${{ secrets.SENTRY_PROPERTIES_BASE64 }}
        run: |
          ./scripts/setup-sentry-properties.sh

      - name: Minor checks
        run: |
          ls -lah . ios/ node_modules/react-native/scripts/
          ls .env
          git diff yarn.lock
          yarn list

      - name: Build
        timeout-minutes: 60
        env:
          APP_STORE_CONNECT_API_KEY_KEY_ID: ${{ secrets.APP_STORE_CONNECT_API_KEY_KEY_ID }}
          APP_STORE_CONNECT_API_KEY_ISSUER_ID: ${{ secrets.APP_STORE_CONNECT_API_KEY_ISSUER_ID }}
          APP_IDENTIFIER: ${{ secrets.APP_IDENTIFIER }}
          CONNECT_API_KEY_CONTENT: ${{ secrets.CONNECT_API_KEY_CONTENT }}
          FASTLANE_PASSWORD: ${{ secrets.FASTLANE_PASSWORD }}
          FORCED_VERSION_NUMBER_STRING: ${{ github.event.inputs.forcedVersion }}
          FORCED_BUILD_NUMBER: ${{ github.event.inputs.forcedBuildNumber }}
          GIT_HEAD_REF: ${{ github.head_ref }}
          GYM_SCHEME: ${{ secrets.GYM_SCHEME }}
          MAIN_PROJECT: ${{ secrets.MAIN_PROJECT }}
          MAIN_WORKSPACE: ${{ secrets.MAIN_WORKSPACE }}
          PERFORM_LONG_UPLOAD: ${{ secrets.PERFORM_LONG_UPLOAD }}
          TEAM_ID: ${{ secrets.TEAM_ID }}
          FASTLANE_SKIP_UPDATE_CHECK: 1
          ITMSTRANSPORTER_FORCE_ITMS_PACKAGE_UPLOAD: 0
        run: |
          export CERT_KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db
          cd ios
          fastlane ios build --verbose

      - name: Save build log
        if: ${{ always() }}
        uses: actions/upload-artifact@v3
        continue-on-error: true
        with:
          name: build-logs
          path: ios/.build_logs

      - name: Cleanup
        if: ${{ always() }}
        run: |
          CERT_KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db
          security delete-keychain $CERT_KEYCHAIN_PATH
